f = open('26.1.txt') #открыть тхт файл
vmestimost, n = map(int, f.readline().split()) #map() - функция, которая применяет первое в скобках ко второму
#в скобках. readline - позволяет читать строку из открытого файла. split - преобразует строку в список.
gruzi = []
podoshel = []
for s in f:
    gruzi.append(int(s))
gruzi.sort()
for gruz in gruzi:
    if sum(podoshel) + gruz <= vmestimost:
        podoshel.append(gruz)
    elif sum(podoshel[:-1]) + gruz <= vmestimost:
        del podoshel[-1]
        podoshel.append(gruz)
print(len(podoshel), max(podoshel))

# 1 строчка открывает файл
# 2 строчка считали первые два числа из файла, запихнули в переменные.
# дальше добивали каждый элемент из файла в список грузы(gruzi)
# sort() сортирует список от меньшего к большему
# затем для каждого элемента(gruz) из списка грузы(gruzi) проверяем, что если сумма всех элементов в списке подошёл(podoshel), который изначально пустой,
# + этот элемент(gruz) из списка грузы(gruzi) меньше чем вместимость (2 строчка, vmestimost), то в список подошёл добавляем этот элемент(gruz) в список подошёл(podoshel)
# потом, в момент когда груз(gruz) перестаёт влезать в вместимость(т.е. первое условие if sum(podoshel) + gruz <= vmestimost: становится ложным), то проверяется
# что если удалить последний элемент в получившемся списке подошёл(podoshel), высчитать его сумму и прибавить текущий груз(gruz), то удаляется последний
# элемент в подошёл и добавляется текущий gruz. Так находится максимальный вместимый элемент. Т.е. убирается из всего всего списка подошёл самый большой
# элемент и ищется, может ли влезть другой, который, если это возможно, влезет и является самым самым большим.\\
# ЭТО ТАК ПОДРОБНО НАПИСАНО ПОТОМУ ЧТО ЛИЗА ТЫ ТУПАЯ ТЫ ПО ДРУГОМУ НЕ ПОЙМЁШЬ